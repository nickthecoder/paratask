{
    "comments": "Must define row.isFile()\nIf this is true, then row.file must be a File object, refering to a file (not a directory)",
    "rowClassName": "uk.co.nickthecoder.paratask.misc.FileTest",
    "toolClassName": "uk.co.nickthecoder.paratask.Tool",
    "rowFilterScript": "row.isFile()",
    "includes": [
        
    ],
    "options": [
        {
            "type": "task",
            "task": "uk.co.nickthecoder.paratask.tools.GrepTool",
            "code": "grep",
            "label": "Grep",
            "isRow": true,
            "isMultiple": false,
            "prompt": true,
            "newTab": true,
            "refresh": false,
            "parameters": [
                {
                    "name": "filesOrDirectories",
                    "values": [
                        {
                            "expression": "row.file"
                        }
                    ]
                },
                {
                    "name": "patterns",
                    "values": [
                        
                    ]
                },
                {
                    "name": "matchCase",
                    "value": "false"
                },
                {
                    "name": "type",
                    "value": "extended"
                },
                {
                    "name": "part",
                    "value": "any"
                },
                {
                    "name": "invertResults",
                    "value": "false"
                },
                {
                    "name": "followSymLinks",
                    "value": "false"
                },
                {
                    "name": "maxMatches",
                    "value": ""
                },
                {
                    "name": "output",
                    "value": "INHERRIT"
                }
            ]
        },
        {
            "type": "groovy",
            "script": "desktop.browse( row.file )",
            "code": "web",
            "label": "Open with Web Browser",
            "isRow": true,
            "isMultiple": false,
            "prompt": false,
            "newTab": false,
            "refresh": false
        },
        {
            "type": "groovy",
            "script": "desktop.open( row.file )",
            "code": ".",
            "label": "Open File",
            "isRow": true,
            "isMultiple": false,
            "prompt": false,
            "newTab": false,
            "refresh": false,
            "aliases": [
                "o"
            ]
        },
        {
            "type": "task",
            "task": "uk.co.nickthecoder.paratask.tools.SearchAndReplaceTask",
            "code": "s&r",
            "label": "Search and Replace",
            "isRow": true,
            "isMultiple": true,
            "prompt": false,
            "newTab": false,
            "refresh": false,
            "parameters": [
                {
                    "name": "files",
                    "values": [
                        
                    ]
                },
                {
                    "name": "searchString",
                    "value": ""
                },
                {
                    "name": "replaceString",
                    "value": ""
                },
                {
                    "name": "useRegex",
                    "value": "false"
                },
                {
                    "name": "matchCase",
                    "value": "true"
                }
            ]
        },
        {
            "type": "task",
            "task": "uk.co.nickthecoder.paratask.tools.CommandTask",
            "code": "q",
            "label": "Queue Music in Audacious",
            "isRow": true,
            "isMultiple": true,
            "prompt": false,
            "newTab": false,
            "refresh": false,
            "parameters": [
                {
                    "name": "program",
                    "value": "audacious"
                },
                {
                    "name": "arguments",
                    "values": [
                        {
                            "value": "--enqueue"
                        },
                        {
                            "expression": "rows.collect { it.file.toString() }"
                        }
                    ]
                },
                {
                    "name": "directory",
                    "value": "./"
                },
                {
                    "name": "output",
                    "value": "INHERRIT"
                }
            ]
        },
        {
            "type": "task",
            "task": "uk.co.nickthecoder.paratask.tools.places.RenameFileTask",
            "code": "r",
            "label": "Rename",
            "isRow": true,
            "isMultiple": false,
            "prompt": true,
            "newTab": false,
            "refresh": false,
            "parameters": [
                {
                    "name": "file",
                    "expression": "row.file"
                },
                {
                    "name": "newName",
                    "expression": "row.file.name"
                }
            ]
        },
        {
            "type": "task",
            "task": "uk.co.nickthecoder.paratask.tools.CommandTask",
            "code": "play",
            "label": "Play Music",
            "isRow": true,
            "isMultiple": false,
            "prompt": false,
            "newTab": false,
            "refresh": false,
            "aliases": [
                ">"
            ],
            "parameters": [
                {
                    "name": "program",
                    "value": "audacious"
                },
                {
                    "name": "arguments",
                    "values": [
                        {
                            "expression": "row.file.toString()"
                        }
                    ]
                },
                {
                    "name": "directory",
                    "expression": "row.file.parentFile"
                },
                {
                    "name": "output",
                    "value": "INHERRIT"
                }
            ]
        },
        {
            "type": "task",
            "task": "uk.co.nickthecoder.paratask.tools.editor.EditorTool",
            "code": "e",
            "label": "Edit with built-in Editor",
            "isRow": true,
            "isMultiple": true,
            "prompt": false,
            "newTab": true,
            "refresh": false,
            "parameters": [
                {
                    "name": "file",
                    "values": [
                        {
                            "expression": "rows.collect{ it.file }"
                        }
                    ]
                }
            ]
        },
        {
            "type": "task",
            "task": "uk.co.nickthecoder.paratask.tools.CommandTask",
            "code": "rm",
            "label": "Delete File",
            "isRow": true,
            "isMultiple": true,
            "prompt": true,
            "newTab": false,
            "refresh": false,
            "keyCode": "DELETE",
            "shift": "DOWN",
            "aliases": [
                "del"
            ],
            "parameters": [
                {
                    "name": "program",
                    "value": "rm"
                },
                {
                    "name": "arguments",
                    "values": [
                        {
                            "value": "-f"
                        },
                        {
                            "value": "--"
                        },
                        {
                            "expression": "rows.collect{ it.file.toString() }"
                        }
                    ]
                },
                {
                    "name": "directory",
                    "value": "./"
                },
                {
                    "name": "output",
                    "value": "INHERRIT"
                }
            ]
        }
    ]
}