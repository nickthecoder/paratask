{
    "rowClassName": "uk.co.nickthecoder.paratask.tools.places.Place",
    "toolClassName": "uk.co.nickthecoder.paratask.tools.places.PlacesTool",
    "includes": [
        "fileOrDir",
        "url"
    ],
    "options": [
        {
            "type": "groovy",
            "script": "tool.taskNew()",
            "code": "+",
            "label": "New Place",
            "isRow": false,
            "isMultiple": false,
            "prompt": true,
            "newTab": false,
            "refresh": false
        },
        {
            "type": "groovy",
            "script": "row.taskCopy()",
            "code": "=",
            "label": "Copy Place",
            "isRow": true,
            "isMultiple": false,
            "prompt": true,
            "newTab": false,
            "refresh": false
        },
        {
            "type": "groovy",
            "script": "row.taskEdit()",
            "code": "e",
            "label": "Edit Place",
            "isRow": true,
            "isMultiple": false,
            "prompt": true,
            "newTab": false,
            "refresh": false
        },
        {
            "type": "task",
            "task": "uk.co.nickthecoder.paratask.tools.places.DirectoryTool",
            "code": "^",
            "label": "Open Parent Directory",
            "isRow": true,
            "isMultiple": false,
            "prompt": false,
            "newTab": true,
            "refresh": false,
            "parameters": [
                {
                    "name": "directories",
                    "values": [
                        {
                            "expression": "row.file.parentFile"
                        }
                    ]
                },
                {
                    "name": "treeRoot",
                    "value": "/home/nick/projects/paratask/"
                },
                {
                    "name": "placesFile",
                    "value": ""
                },
                {
                    "name": "onlyFiles",
                    "value": ""
                },
                {
                    "name": "extensions",
                    "values": [
                        
                    ]
                },
                {
                    "name": "includeHidden",
                    "value": "false"
                },
                {
                    "name": "foldSingleDirectories",
                    "value": "true"
                },
                {
                    "name": "thumbnailHeight",
                    "value": "32"
                },
                {
                    "name": "directoryThumbnail",
                    "value": ".thumbnails/default.jpg"
                },
                {
                    "name": "autoRefresh",
                    "value": "true"
                }
            ]
        },
        {
            "type": "groovy",
            "script": "row.taskRemove()",
            "code": "-",
            "label": "Remove Place",
            "isRow": true,
            "isMultiple": false,
            "prompt": true,
            "newTab": false,
            "refresh": false,
            "keyCode": "DELETE",
            "shift": "DOWN"
        },
        {
            "type": "task",
            "task": "uk.co.nickthecoder.paratask.tools.editor.EditorTool",
            "code": "edit",
            "label": "Edit Places in Text Editor",
            "isRow": false,
            "isMultiple": false,
            "prompt": false,
            "newTab": true,
            "refresh": false,
            "parameters": [
                {
                    "name": "file",
                    "expression": "tool.filesP.value"
                }
            ]
        },
        {
            "type": "groovy",
            "script": "def builder = new FileLister.Builder()\nbuilder.extensions = [\"webm\", \"mkv\", \"flv\", \"vob\", \"ogv\", \"ogg\", \"drc\", \"avi\", \"mov\", \"qt\", \"wmv\", \"rm\", \"mp4\" ,\"m4v\", \"mpg\", \"mpg2\", \"mpeg\", \"mpv\", \"mpe\", \"m2v\"]\n\ndef lister = builder.build()\n\ndef prevFile = lister.previousFile( row.file )\nif (prevFile != null) {\n    def edit = row.taskEdit()\n    edit.fileP.value = prevFile\n    edit.run()\n}\n",
            "code": "<",
            "label": "Move to Previous Video",
            "isRow": true,
            "isMultiple": false,
            "prompt": false,
            "newTab": false,
            "refresh": false
        },
        {
            "type": "groovy",
            "script": "desktop.open( row.resource.file )\n\ndef builder = new FileLister.Builder()\nbuilder.extensions = [\"webm\", \"mkv\", \"flv\", \"vob\", \"ogv\", \"ogg\", \"drc\", \"avi\", \"mov\", \"qt\", \"wmv\", \"rm\", \"mp4\" ,\"m4v\", \"mpg\", \"mpg2\", \"mpeg\", \"mpv\", \"mpe\", \"m2v\", \"rmvb\"]\n\ndef lister = builder.build()\n\ndef nextFile = lister.nextFile( row.file )\nif ( nextFile != null ) {\n    def edit = row.taskEdit()\n    edit.fileP.value = nextFile\n    edit.run()\n}\n",
            "code": ">",
            "label": "Play Video and Move to Next",
            "isRow": true,
            "isMultiple": false,
            "prompt": false,
            "newTab": false,
            "refresh": false
        }
    ]
}