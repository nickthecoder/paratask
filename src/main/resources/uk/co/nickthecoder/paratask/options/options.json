{
    "includes": [
        
    ],
    "options": [
        {
            "type": "groovy",
            "script": "tool.taskCopy(row)",
            "code": "=",
            "label": "Copy Option",
            "isRow": true,
            "isMultiple": false,
            "prompt": true,
            "newTab": false,
            "refresh": false
        },
        {
            "type": "groovy",
            "script": "tool.taskEdit(row)",
            "code": ".",
            "label": "Edit Option",
            "isRow": true,
            "isMultiple": false,
            "prompt": true,
            "newTab": false,
            "refresh": false
        },
        {
            "type": "groovy",
            "script": "tool.taskDelete(row)",
            "code": "-",
            "label": "Delete Option",
            "isRow": true,
            "isMultiple": false,
            "prompt": true,
            "newTab": false,
            "refresh": false
        },
        {
            "type": "groovy",
            "script": "tool.taskNew()",
            "code": "+",
            "label": "New Option",
            "isRow": false,
            "isMultiple": false,
            "prompt": true,
            "newTab": false,
            "refresh": false
        },
        {
            "type": "task",
            "task": "uk.co.nickthecoder.paratask.tools.editor.EditorTool",
            "code": "edit",
            "label": "Edit Options File in Text Editor",
            "isRow": false,
            "isMultiple": false,
            "prompt": false,
            "newTab": true,
            "refresh": false,
            "parameters": [
                {
                    "name": "file",
                    "values": [
                        {
                            "expression": "tool.getFileOptions().resource.file"
                        }
                    ]
                },
                {
                    "name": "initialText",
                    "value": ""
                },
                {
                    "name": "goToLine",
                    "value": ""
                },
                {
                    "name": "findText",
                    "value": ""
                },
                {
                    "name": "matchCase",
                    "value": "false"
                },
                {
                    "name": "useRegex",
                    "value": "false"
                }
            ]
        }
    ]
}