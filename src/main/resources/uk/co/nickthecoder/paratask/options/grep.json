{
    "includes": [
        "file"
    ],
    "options": [
        {
            "type": "groovy",
            "script": "new EditorTool( row.file )",
            "code": ".",
            "label": "Edit with Internal Text Editor",
            "isRow": true,
            "isMultiple": false,
            "prompt": false,
            "newTab": true,
            "refresh": false
        },
        {
            "type": "task",
            "task": "uk.co.nickthecoder.paratask.tools.editor.EditorTool",
            "code": "e",
            "label": "Edit in Internal Editor",
            "isRow": true,
            "isMultiple": false,
            "prompt": false,
            "newTab": false,
            "refresh": false,
            "parameters": [
                {
                    "name": "file",
                    "values": [
                        {
                            "expression": "row.file"
                        }
                    ]
                },
                {
                    "name": "initialText",
                    "value": ""
                },
                {
                    "name": "goToLine",
                    "expression": "row.lineNumber"
                },
                {
                    "name": "findText",
                    "expression": "tool.grepTask.patternsP.value[0]"
                },
                {
                    "name": "matchCase",
                    "value": "false"
                },
                {
                    "name": "useRegex",
                    "expression": "tool.grepTask.typeP.value != \"-F\""
                }
            ]
        },
        {
            "type": "task",
            "task": "uk.co.nickthecoder.paratask.tools.GrepTool",
            "code": "1",
            "label": "Show only 1 Result per File",
            "isRow": false,
            "isMultiple": false,
            "prompt": false,
            "newTab": false,
            "refresh": false,
            "parameters": [
                {
                    "name": "filesOrDirectories",
                    "expression": "tool.grepTask.filesP.value"
                },
                {
                    "name": "patternsToMatch",
                    "expression": "tool.grepTask.patternsP.value"
                },
                {
                    "name": "matchCase",
                    "expression": "tool.grepTask.matchCaseP.value"
                },
                {
                    "name": "type",
                    "expression": "tool.grepTask.typeP.value"
                },
                {
                    "name": "part",
                    "expression": "tool.grepTask.partP.value"
                },
                {
                    "name": "invertResults",
                    "expression": "tool.grepTask.invertResultsP.value"
                },
                {
                    "name": "followSymLinks",
                    "expression": "tool.grepTask.followSymLinksP.value"
                },
                {
                    "name": "maxMatches",
                    "expression": "1"
                },
                {
                    "name": "contextLines",
                    "value": ""
                },
                {
                    "name": "additionalOptions",
                    "expression": "tool.grepTask.additionalOptionsP.value"
                }
            ]
        },
        {
            "type": "task",
            "task": "uk.co.nickthecoder.paratask.tools.SearchAndReplaceTask",
            "code": "r",
            "label": "Replace",
            "isRow": true,
            "isMultiple": true,
            "prompt": true,
            "newTab": false,
            "refresh": true,
            "parameters": [
                {
                    "name": "files",
                    "expression": "rows.file"
                },
                {
                    "name": "searchString",
                    "expression": "tool.grepTask.patternsP.value[0]"
                },
                {
                    "name": "replaceString",
                    "value": ""
                },
                {
                    "name": "useRegex",
                    "expression": "tool.grepTask.typeP != \"-F\""
                },
                {
                    "name": "matchCase",
                    "expression": "tool.grepTask.matchCaseP.value"
                }
            ]
        }
    ]
}