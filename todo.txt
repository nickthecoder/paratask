
IncludesTool - "+" option isn't implemented

Editor - Open a file in a new lower tab
    Can we remove a single lower tab?
        When removing the last editor tab, remove the whole toolPane
        
Editor - find (simple non-regex will be good enough to begin with)

Run the install task, and run from ~/bin using installed paths.

Table Options Menu
    Don't show row options when selection is empty
    Show non-row option (in sub-menu when there are row options)

Editor to work with grep to highlight matches (using regex and fixed patterns)

Handle exceptions from running options

Position focus when a tab (both kinds) is selected

Tables to be full width
    Set up column widths
Tooltips for table columns

Right click on options field and table row for a popup menu of the options

Delete HidingSplitPane (use regular SplitPane) and just use the bodge to ensure parentage

New Tools :
    DirectoryTool
    DirectoryTreeTool (recursive) - As a tree structure would be good!
    PlacesTool
    PlacesChoices
    Disk usage
    Mount
    Groovy Tools - Lists groovy scripts in a directory, and allows them to be run.

Editor - Allow listeners when saving the file
    Use it in PlacesTool to refresh the list when editing.

    
Listen to the directories on the options path, and clear any cache when a file changes.

A "lazy" terminal tool, only adds itself to the GUI if the command returns output.

StringListParameter
    trim : Boolean
    removeBlanks : Boolean
    
    Renderes as a TextArea

    Will use this for includes as well as command line options

Options which work in the editor
    e.g. remove trailing spaces, convert tabs to spaces
    Expose features throught the "tool", which is in the bindings.

A groovy shell, which has access to the current tool.
    Input may need to be a TextArea to allow for structured code, rather than one liners
        help( object ) gives a list of available properties and methods
        api( object ) opens the javadoc page for that object's class
    Can be a regular HalfTab, but with its own button and shortcut
        If more than one scripting language is available, then use a menubutton thingy (like new tab, new window)

Add optional help button to TaskPrompter and ParametersPane (if TaskDescription has a help address)

Embed a "real" terminal

WebTool open in new tab (right click says "Open in new window) - top level and tool tab!
WebTool to allow for multiple web pages.

Task and Tool are in two different packages. Should they be?

ProjectWindow to detach all tabs when it is closed
    (so that terminals and other tools can clean up)

Simple Text Editor

WebTool to allow for multiple web pages.

Use a Property for the tab's text
    Editor adds a "*" without having firing events to listeners
    Ditto for window's title

New toolbar buttons
    Save Project, Load Project
    Settings

Create tests for BooleanParameter and BooleanField

Create tests for GroupParameter duplicates.
    Also need to ensure all existing parameters aren't in an added GroupParameter.

Create tests for ChoiceParameter
    Enum tests

FocusListener to use weak refs, so that if the resources are gc'd, then it can remove itself.

Real terminal emulator

Bugs
====

Editor must not re-load existing files when re-running the tool.

Full width Inner parameters of a MultipleParameter are not layed out correctly

A collapsed groups must unfurl when a child has an error
    Add a listener in GroupField
    That won't handle custom errors, only Parameter's built in validation

Delete the 1 from "100" in a spinner throws. My code isn't in the stack trace :-(

Hard Bugs
=========
I've tried to fix them, but have not found a solution.

WebTool does not detect when a redirect occurs.
    This puts TWO moments in the history (one for the address requested and another for the redirected address).
    When in the middle of History this second one wipes out the future history.


Notes
=====
    
JavaFX Standard CSS :
    https://pastebin.com/0PebD9nR
    https://gist.github.com/maxd/63691840fc372f22f470
JavaFX Shortcuts :
    https://wiki.openjdk.java.net/display/OpenJFX/Keyboard+Navigation
