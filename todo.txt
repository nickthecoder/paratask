

ChoiceParameter not syncing value with 2nd field

BUG. Middle click doesn't change selection, so operates on the wrong row.

GrepTool running despite no values for files or matches

GrepTool to show the command line.

Add a "debug" script to TaskOption which is run before the option itself is run.
	Funny... The easiest way to do this is to merge GroovyOption and TaskOption!
		Simpler, better
			Does away with lots of "ifs"
			No need for clunky "OneOfParameter"
			
TaskParameter Better selection of tools
	Group by catergory in a pop-up menu

FileOptions doesn't know which tool it is for. Therefore we can't get a list of tool specific tasks.

Task names may not be unique, therefore options names won't be unique
	Could add an additional mapping when registering a task
	Could enforce all non-core Tools prefix their options name with an ID e.g. uk.co.nickthecoder.git
		Maybe this could be done automatically by using meta data in the Plugin object.

Split project into sub-projects
	Git is a good first choice. Ahh, but the options .json file!!!	

AddHeaderFooter task
	A single file, or recurse though a directory
	Filter based on extensions
	If file contains the magic phrase, then skip
	otherwise append the given template
	Use it to add GPL headers to all my files.

Editor - find (simple non-regex will be good enough to begin with)
    Editor to work with grep to highlight matches (using regex and fixed patterns)

Switch logic newTab -> sameTab?

Given that many options which return Tools are newTab, maybe I need a way to override this.
	function which have newTab : Boolean become newTab : Boolean?
	Do something similar for prompt? So you could default "rm" to prompt, but override by holding down shift.

DateParameter
	Use it on GitLogTool

Port the directory listening code from wrkfoo, so that DirectoryTool and DirectoryTreeTool can update

SimpleTerminal
    Add an option to PAUSE when buffer size is exceeded, and show a More button to continue
	Hmm, this would only make sense if it pause per-screenful, like the more command.
        Make this the default, and change it for interactive tools, such as Python, Groovy, and plain terminal.

Implement command line tab completion

Editor - Open a file in a new lower tab
    Can we remove a single lower tab?
        When removing the last editor tab, remove the whole toolPane
    Allow a single Editor tool to be reused
	i.e. When opening a new text file, if there is already an Editor open, then use it, adding a new minor tab
	    (or showing the minor tab if it is already open)


Table Column selection
    http://stackoverflow.com/questions/27739833/adapt-tableview-menu-button

Editor - Allow listeners when saving the file
    Use it in PlacesTool to refresh the list when editing.


Directory Listener
    Listen to the directories on the options path, and clear any cache when a file changes.
    Editor to offer "reload" when a file is touched
    Directory and Places, PlacesDirectory update themselves when a directory changes.

A "lazy" terminal tool, only adds itself to the GUI if the command returns output.

Add optional help button to TaskPrompter and ParametersPane (if TaskDescription has a help address)

Embed a "real" terminal

WebTool open in new tab (right click says "Open in new window) - top level and tool tab!
WebTool to allow for multiple web pages.

FocusListener to use weak refs, so that if the resources are gc'd, then it can remove itself.
    This is currently a memory leak unless the FocusListener is explicitly removed
	(They are being removed, but I wouldn't notice if that stopped working).

Bugs
====

Editor must not re-load existing files when re-running the tool.

Delete the 1 from "100" in a spinner throws. My code isn't in the stack trace :-(

Hard Bugs
=========

I've tried to fix them, but have not found a solution.

WebTool does not detect when a redirect occurs.
    This puts TWO moments in the history (one for the address requested and another for the redirected address).
    When in the middle of History this second one wipes out the future history.


Notes
=====
    
JavaFX Standard CSS :
    https://pastebin.com/0PebD9nR
    https://gist.github.com/maxd/63691840fc372f22f470
JavaFX Shortcuts :
    https://wiki.openjdk.java.net/display/OpenJFX/Keyboard+Navigation
