Try out adding/deleting options

implement aliases, and use it for "e" as well as "." on options.json

Handle exceptions from running options

Listen to the directories on the options path, and clear any cache when a file changes.

Embed a "real" terminal

Implement FileParameter properly (file/directory/either, must/must not exist)

FileParameter to have a menu, shorcuts to got up a directory, shortcut to auto-complete
Port FileLister to Kotlin

Run non-row options from the option field

Position focus when a tab (both kinds) is selected

Select the tab when a new tab is added

ToolRunner to prevent a Tool being run while it is already running

OptionsRunner should only refresh the results ONCE when many options are run at once.

Tables to be full width
    Set up column widths
Tooltips for table columns

Right click on options field and table row for a popup menu of the options

Delete HidingSplitPane (use regular SplitPane) and just use the bodge to ensure parentage

Code column must be wider

New Tools :
    FolderTool
    FolderTreeTool (recursive) - As a tree structure would be good!
    PlacesTool
    GitTool
        Include a GitCommitTask, which prompts for the commit comment, then runs git commit
            -all or regular can be one of the parameters

Git tools
    

StringListParameter
    trim : Boolean
    removeBlanks : Boolean
    
    Renderes as a TextArea

    Will use this for includes as well as command line options

Options which work in the editor
    e.g. remove trailing spaces, convert tabs to spaces

A groovy shell, which has access to the current tool.
    Input may need to be a TextArea to allow for structured code, rather than one liners
        help( object ) gives a list of available properties and methods
        api( object ) opens the javadoc page for that object's class
    Can be a regular HalfTab, but with its own button and shortcut
        If more than one scripting language is available, then use a menubutton thingy (like new tab, new window)

Add optional help button to TaskPrompter and ParametersPane (if TaskDescription has a help address)

Remove Results.chooseFocus

WebTool open in new tab (right click says "Open in new window) - top level and tool tab!
WebTool to allow for multiple web pages.

Task and Tool are in two different packages. Should they be?

ProjectWindow to detach all tabs when it is closed
    (so that terminals and other tools can clean up)

Simple Text Editor

WebTool to allow for multiple web pages.

Use a Property for the tab's text
    Editor adds a "*" without having firing events to listeners
    Ditto for window's title

New toolbar buttons
    Save Project, Load Project
    Settings

Create tests for BooleanParameter and BooleanField

Create tests for GroupParameter duplicates.
    Also need to ensure all existing parameters aren't in an added GroupParameter.

Create tests for ChoiceParameter
    Enum tests

FocusListener to use weak refs, so that if the resources are gc'd, then it can remove itself.

Real terminal emulator

Bugs
====

Editor must not re-load existing files when re-running the tool.

Full width Inner parameters of a MultipleParameter are not layed out correctly

A collapsed groups must unfurl when a child has an error
    Add a listener in GroupField
    That won't handle custom errors, only Parameter's built in validation

Delete the 1 from "100" in a spinner throws. My code isn't in the stack trace :-(

Hard Bugs
=========
I've tried to fix them, but have not found a solution.

WebTool does not detect when a redirect occurs.
    This puts TWO moments in the history (one for the address requested and another for the redirected address).
    When in the middle of History this second one wipes out the future history.


Notes
=====
    
JavaFX Standard CSS :
    https://pastebin.com/0PebD9nR
    https://gist.github.com/maxd/63691840fc372f22f470
JavaFX Shortcuts :
    https://wiki.openjdk.java.net/display/OpenJFX/Keyboard+Navigation
